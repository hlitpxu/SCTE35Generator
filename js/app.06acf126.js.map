{"version":3,"file":"js/app.06acf126.js","mappings":"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","sources":["webpack://client/./src/App.vue","webpack://client/./src/components/types.ts","webpack://client/./src/components/splice_time.vue","webpack://client/./src/components/splice_time.vue?03a8","webpack://client/./src/components/break_duration.vue","webpack://client/./src/components/break_duration.vue?f5c0","webpack://client/./src/components/splice_insert.vue","webpack://client/./src/components/splice_insert.vue?c96d","webpack://client/./src/components/time_signal.vue","webpack://client/./src/components/time_signal.vue?7d87","webpack://client/./src/components/seg_descriptor.vue","webpack://client/./src/components/seg_descriptor.vue?846d","webpack://client/./src/services/Esam.ts","webpack://client/./src/components/esam_oob_player.vue","webpack://client/./src/components/esam_oob_player.vue?95f7","webpack://client/./src/components/splice_info.vue","webpack://client/./src/components/splice_info.vue?0f16","webpack://client/./src/App.vue?7ccd","webpack://client/./src/main.ts","webpack://client/webpack/bootstrap","webpack://client/webpack/runtime/chunk loaded","webpack://client/webpack/runtime/define property getters","webpack://client/webpack/runtime/global","webpack://client/webpack/runtime/hasOwnProperty shorthand","webpack://client/webpack/runtime/make namespace object","webpack://client/webpack/runtime/jsonp chunk loading","webpack://client/webpack/startup"],"sourcesContent":["<template>\n  <SpliceInfo />\n</template>\n\n<script>\nimport SpliceInfo from \"./components/splice_info.vue\";\n\nexport default {\n  name: \"App\",\n  components: {\n    SpliceInfo,\n  },\n};\n</script>","\nexport enum COMMAND_TYPE {\n\tSPLICE_INSERT = 0x05,\n\tTIME_SIGNAL = 0x06,\n}\n\nexport enum DESCRIPTOR_TYPE {\n\tSEGMENTATION_DESCIPTOR = 0x02,\n}\n\nexport enum SEGMENTATION_TYPE_ID {\n\tNOT_INDICATED = 0x00,\n\tCONTENT_IDENTIFICATION = 0x01,\n\tPROGRAM_START = 0x10,\n\tPROGRAM_END = 0x11,\n\tPROGRAM_EARLY_TERMINATION = 0x12,\n\tPROGRAM_BREAKAWAY = 0x13,\n\tPROGRAM_RESUMPTION = 0x14,\n\tPROGRAM_RUNOVER_PLANNED = 0x15,\n\tPROGRAM_RUNOVER_UNPLANNED = 0x16,\n\tPROGRAM_OVERLAP_START = 0x17,\n\tPROGRAM_BLACKOUT_OVERRIDE = 0x18,\n\tPROGRAM_START_IN_PROGRESS = 0x19,\n\tCHAPTER_START = 0x20,\n\tCHAPTER_END = 0x21,\n\tBREAK_START = 0x22,\n\tBREAK_END = 0x23,\n\tOPENING_CREDIT_START = 0x24,\n\tOPENING_CREDIT_END = 0x25,\n\tCLOSING_CREDIT_START = 0x26,\n\tCLOSING_CREDIT_END = 0x27,\n\tPROVIDER_ADVERTISEMENT_START = 0x30,\n\tPROVIDER_ADVERTISEMENT_END = 0x31,\n\tDISTRIBUTOR_ADVERTISEMENT_START = 0x32,\n\tDISTRIBUTOR_ADVERTISEMENT_END = 0x33,\n\tPROVIDER_PLACEMENT_OPPORTUNITY_START = 0x34,\n\tPROVIDER_PLACEMENT_OPPORTUNITY_END = 0x35,\n\tDISTRIBUTOR_PLACEMENT_OPPORTUNITY_START = 0x36,\n\tDISTRIBUTOR_PLACEMENT_OPPORTUNITY_END = 0x37,\n\tPROVIDER_OVERLAY_PLACEMENT_OPPORTUNITY_START = 0x38,\n\tPROVIDER_OVERLAY_PLACEMENT_OPPORTUNITY_END = 0x39,\n\tDISTRIBUTOR_OVERLAY_PLACEMENT_OPPORTUNITY_START = 0x3A,\n\tDISTRIBUTOR_OVERLAY_PLACEMENT_OPPORTUNITY_END = 0x3B,\n\tUNSCHEDULED_EVENT_START = 0x40,\n\tUNSCHEDULED_EVENT_END = 0x41,\n\tNETWORK_START = 0x50,\n\tNETWORK_END = 0x51,\n}\nexport namespace SEGMENTATION_TYPE_ID {\n\tconst sub_segment_type_ids = [\n\t\tSEGMENTATION_TYPE_ID.PROVIDER_PLACEMENT_OPPORTUNITY_START,\n\t\tSEGMENTATION_TYPE_ID.DISTRIBUTOR_PLACEMENT_OPPORTUNITY_START,\n\t\tSEGMENTATION_TYPE_ID.PROVIDER_OVERLAY_PLACEMENT_OPPORTUNITY_START,\n\t\tSEGMENTATION_TYPE_ID.DISTRIBUTOR_OVERLAY_PLACEMENT_OPPORTUNITY_START\n\t];\n\texport function sub_segment_required(type_id: SEGMENTATION_TYPE_ID): boolean {\n\t\treturn sub_segment_type_ids.indexOf(type_id) != -1;\n\t}\n\n\texport enum SEGMENT_NUM {\n\t\tZERO,\n\t\tONE,\n\t\tPOSITIVE,\n\t\tNON_NEGATIVE,\n\t}\n\tconst zero_num_type_ids = [\n\t\tSEGMENTATION_TYPE_ID.NOT_INDICATED,\n\t\tSEGMENTATION_TYPE_ID.CONTENT_IDENTIFICATION,\n\t\tSEGMENTATION_TYPE_ID.PROGRAM_BLACKOUT_OVERRIDE,\n\t\tSEGMENTATION_TYPE_ID.UNSCHEDULED_EVENT_START,\n\t\tSEGMENTATION_TYPE_ID.UNSCHEDULED_EVENT_END,\n\t\tSEGMENTATION_TYPE_ID.NETWORK_START,\n\t\tSEGMENTATION_TYPE_ID.NETWORK_END,\n\t];\n\tconst one_num_type_ids = [\n\t\tSEGMENTATION_TYPE_ID.PROGRAM_START,\n\t\tSEGMENTATION_TYPE_ID.PROGRAM_END,\n\t\tSEGMENTATION_TYPE_ID.PROGRAM_EARLY_TERMINATION,\n\t\tSEGMENTATION_TYPE_ID.PROGRAM_BREAKAWAY,\n\t\tSEGMENTATION_TYPE_ID.PROGRAM_RESUMPTION,\n\t\tSEGMENTATION_TYPE_ID.PROGRAM_RUNOVER_PLANNED,\n\t\tSEGMENTATION_TYPE_ID.PROGRAM_RUNOVER_UNPLANNED,\n\t\tSEGMENTATION_TYPE_ID.PROGRAM_OVERLAP_START,\n\t\tSEGMENTATION_TYPE_ID.PROGRAM_START_IN_PROGRESS,\n\t\tSEGMENTATION_TYPE_ID.OPENING_CREDIT_START,\n\t\tSEGMENTATION_TYPE_ID.OPENING_CREDIT_END,\n\t\tSEGMENTATION_TYPE_ID.CLOSING_CREDIT_START,\n\t\tSEGMENTATION_TYPE_ID.CLOSING_CREDIT_END,\n\t];\n\tconst positive_num_type_ids = [\n\t\tSEGMENTATION_TYPE_ID.CHAPTER_START,\n\t\tSEGMENTATION_TYPE_ID.CHAPTER_END,\n\t];\n\t// others\n\t// const non_negative_num_type_ids = [];\n\texport function get_segment_num(type_id: SEGMENTATION_TYPE_ID): SEGMENT_NUM {\n\t\tif (zero_num_type_ids.includes(type_id)) {\n\t\t\treturn SEGMENT_NUM.ZERO;\n\t\t}\n\t\tif (one_num_type_ids.includes(type_id)) {\n\t\t\treturn SEGMENT_NUM.ONE;\n\t\t}\n\t\tif (positive_num_type_ids.includes(type_id)) {\n\t\t\treturn SEGMENT_NUM.POSITIVE;\n\t\t}\n\t\treturn SEGMENT_NUM.NON_NEGATIVE;\n\t}\n}\n\nexport enum SEGMENTATION_UPID_TYPE {\n\tNOT_USED = 0x00,\n\tUSER_DEFINED = 0x01,\n\tISCI = 0x02,\n\tAD_ID = 0x03,\n\tUMID = 0x04,\n\tISAN_5 = 0x05,\n\tISAN_6 = 0x06,\n\tTID = 0x07,\n\tTI = 0x08,\n\tADI = 0x09,\n\tEIDR = 0x0A,\n\tATSC_CONTENT_IDENTIFIER = 0x0B,\n\tMPU = 0x0C,\n\tMID = 0x0D,\n\tADS_INFORMATION = 0x0E,\n\tURI = 0x0F,\n}\n\nexport namespace SEGMENTATION_UPID_TYPE {\n\tconst lenth_limit_map = new Map([\n\t\t[SEGMENTATION_UPID_TYPE.NOT_USED, 0],\n\t\t[SEGMENTATION_UPID_TYPE.USER_DEFINED, -1],\n\t\t[SEGMENTATION_UPID_TYPE.ISCI, 8],\n\t\t[SEGMENTATION_UPID_TYPE.AD_ID, 12],\n\t\t[SEGMENTATION_UPID_TYPE.UMID, 32],\n\t\t[SEGMENTATION_UPID_TYPE.ISAN_5, 8],\n\t\t[SEGMENTATION_UPID_TYPE.ISAN_6, 12],\n\t\t[SEGMENTATION_UPID_TYPE.TID, 12],\n\t\t[SEGMENTATION_UPID_TYPE.TI, 8],\n\t\t[SEGMENTATION_UPID_TYPE.ADI, -1],\n\t\t[SEGMENTATION_UPID_TYPE.EIDR, 12],\n\t\t[SEGMENTATION_UPID_TYPE.ATSC_CONTENT_IDENTIFIER, -1],\n\t\t[SEGMENTATION_UPID_TYPE.MPU, -1],\n\t\t[SEGMENTATION_UPID_TYPE.MID, -1],\n\t\t[SEGMENTATION_UPID_TYPE.ADS_INFORMATION, -1],\n\t\t[SEGMENTATION_UPID_TYPE.URI, -1],\n\t])\n\texport function lenth_limit(type: SEGMENTATION_UPID_TYPE): number | undefined {\n\t\treturn lenth_limit_map.get(type)\n\t}\n}\n\nexport enum DEVICE_RESTRICTION {\n\tGROUP_0 = 0,\n\tGROUP_1 = 1,\n\tGROUP_2 = 2,\n\tNONE = 3,\n}","<template>\n  <div class=\"form-check form-switch\">\n    <input class=\"form-check-input\" type=\"checkbox\" v-model=\"value.time_specified\">\n    <label class=\"form-check-label\">time_specified</label>\n  </div>\n\n  <div v-if=\"value.time_specified\" class=\"input-group\">\n    <div class=\"input-group-prepend\">\n      <span class=\"input-group-text\">pts_time</span>\n    </div>\n    <input type=\"number\" class=\"form-control\" v-model=\"value.pts_time\" />\n  </div>\n</template>\n  \n<script>\nexport default {\n  name: \"SpliceTime\",\n  props: {\n    modelValue: Object,\n  },\n  computed: {\n    value: {\n      get() {\n        var v = this.modelValue;\n        v.time_specified = false;\n        v.pts_time = 0;\n        return v;\n      },\n      set(value) {\n        this.$emit(\"upate:modelValue\", value);\n      },\n    },\n  },\n  get_binary(data) {\n    var rv = [0x7F];\n    if (data.time_specified) {\n      rv[0] = 0xFE;\n      rv.push(0x00, 0x00, 0x00, 0x00);\n      if ((data.pts_time & 0x100000000) > 0) {\n        rv[0] |= 0x01;\n      }\n      rv[1] |= (data.pts_time & 0xFF000000) >>> 24;\n      rv[2] |= (data.pts_time & 0xFF0000) >>> 16;\n      rv[3] |= (data.pts_time & 0xFF00) >>> 8;\n      rv[4] |= (data.pts_time & 0xFF);\n    }\n    return rv;\n  },\n};\n</script>","import { render } from \"./splice_time.vue?vue&type=template&id=1ab8ee42\"\nimport script from \"./splice_time.vue?vue&type=script&lang=js\"\nexport * from \"./splice_time.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n    <div class=\"form-check form-switch\">\n        <input class=\"form-check-input\" type=\"checkbox\" v-model=\"value.auto_return\">\n        <label class=\"form-check-label\">auto_return</label>\n    </div>\n\n    <div class=\"input-group\">\n        <div class=\"input-group-prepend\">\n            <span class=\"input-group-text\">duration</span>\n        </div>\n        <input type=\"number\" class=\"form-control\" v-model=\"value.duration\" />\n    </div>\n</template>\n    \n<script>\nexport default {\n    name: \"BreakDuration\",\n    props: {\n        modelValue: Object,\n    },\n    computed: {\n        value: {\n            get() {\n                var v = this.modelValue\n                v.auto_return = false;\n                v.duration = 0;\n                return v;\n            },\n            set(value) {\n                this.$emit(\"upate:modelValue\", value);\n            },\n        },\n    },\n    get_binary(data) {\n        var rv = [0x7E, 0x00, 0x00, 0x00, 0x00];\n        if (data.auto_return) {\n            rv[0] |= 0x80;\n        }\n        if ((data.duration & 0x100000000) > 0) {\n            rv[0] |= 0x01;\n        }\n        rv[1] |= (data.duration & 0xFF000000) >>> 24;\n        rv[2] |= (data.duration & 0xFF0000) >>> 16;\n        rv[3] |= (data.duration & 0xFF00) >>> 8;\n        rv[4] |= (data.duration & 0xFF);\n        return rv;\n    },\n};\n</script>","import { render } from \"./break_duration.vue?vue&type=template&id=18a3bb54\"\nimport script from \"./break_duration.vue?vue&type=script&lang=js\"\nexport * from \"./break_duration.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<script setup>\nvar newComponent = {\n  tag: 0,\n  splice_time: {}\n};\n</script>\n\n<template>\n  <div class=\"input-group\">\n    <div class=\"input-group-prepend\">\n      <span class=\"input-group-text\">event_id</span>\n    </div>\n    <input type=\"number\" class=\"form-control\" v-model=\"value.event_id\" />\n  </div>\n\n  <div class=\"form-check form-switch\">\n    <input class=\"form-check-input\" type=\"checkbox\" v-model=\"value.splice_cancel\">\n    <label class=\"form-check-label\">splice_cancel</label>\n  </div>\n\n  <div v-if=\"!value.splice_cancel\">\n    <div class=\"input-group\">\n      <div class=\"input-group-prepend\">\n        <span class=\"input-group-text\">program_id</span>\n      </div>\n      <input type=\"number\" class=\"form-control\" v-model=\"value.program_id\" />\n    </div>\n\n    <div class=\"form-check form-switch\">\n      <input class=\"form-check-input\" type=\"checkbox\" v-model=\"value.out_of_network\">\n      <label class=\"form-check-label\">out_of_network</label>\n    </div>\n\n    <div class=\"form-check form-switch\">\n      <input class=\"form-check-input\" type=\"checkbox\" v-model=\"value.duration_flag\">\n      <label class=\"form-check-label\">duration_flag</label>\n    </div>\n    <BreakDuration v-if=\"value.duration_flag\" v-model=\"value.break_duration\" />\n\n    <div class=\"form-check form-switch\">\n      <input class=\"form-check-input\" type=\"checkbox\" v-model=\"value.splice_immediate\">\n      <label class=\"form-check-label\">splice_immediate</label>\n    </div>\n\n    <div class=\"form-check form-switch\">\n      <input class=\"form-check-input\" type=\"checkbox\" v-model=\"value.program_splice\">\n      <label class=\"form-check-label\">program_splice</label>\n    </div>\n\n    <div v-if=\"!value.program_splice\">\n      <div class=\"border rounded display-block\">\n        <table class=\"table table-bordered\">\n          <thead>\n            <th>#</th>\n            <th>tag</th>\n            <th>splice time</th>\n          </thead>\n          <tbody>\n            <tr v-for=\"(comp, index) in value.components\" :key=\"index\">\n              <td>\n                <button type=\"button\" class=\"btn btn-outline-danger btn-sm\" @click=\"value.components.splice(index, 1);\">\n                  X\n                </button>\n              </td>\n              <td><input type=\"number\" class=\"form-control\" v-model=\"comp.tag\" /></td>\n              <td>\n                <SpliceTime v-if=\"!value.splice_immediate\" v-model=\"comp.splice_time\" />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <button type=\"button\" class=\"btn btn-outline-primary btn-sm\"\n                  @click=\"value.components.push(JSON.parse(JSON.stringify(newComponent)));\">\n                  +\n                </button>\n              </td>\n              <td></td>\n              <td></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n\n    <div v-if=\"value.program_splice && !value.splice_immediate\">\n      <SpliceTime v-model=\"value.splice_time\" />\n    </div>\n\n    <div class=\"input-group\">\n      <div class=\"input-group-prepend\">\n        <span class=\"input-group-text\">unique_id</span>\n      </div>\n      <input type=\"number\" class=\"form-control\" v-model=\"value.unique_id\" />\n    </div>\n  </div>\n</template>\n\n<script>\nimport SpliceTime from './splice_time.vue'\nimport BreakDuration from './break_duration.vue';\nexport default {\n  name: \"SpliceInsert\",\n  components: {\n    SpliceTime,\n    BreakDuration,\n  },\n  props: {\n    modelValue: Object,\n  },\n  computed: {\n    value: {\n      get() {\n        var v = this.modelValue;\n        v.event_id = 1;\n        v.splice_cancel = false;\n        v.program_id = 1;\n        v.out_of_network = false;\n        v.duration_flag = false;\n        v.splice_immediate = false;\n        v.program_splice = true;\n        v.components = [];\n        v.splice_time = {};\n        v.break_duration = {};\n        v.unique_id = 1;\n        return v;\n      },\n      set(value) {\n        this.$emit(\"upate:modelValue\", value);\n      },\n    },\n  },\n  get_binary(data) {\n    var rv = [0x00, 0x00, 0x00, 0x00, 0x7F];\n    rv[0] |= (data.event_id & 0xFF000000) >>> 24;\n    rv[1] |= (data.event_id & 0xFF0000) >>> 16;\n    rv[2] |= (data.event_id & 0xFF00) >>> 8;\n    rv[3] |= (data.event_id & 0xFF);\n    if (data.splice_cancel) {\n      rv[4] |= 0x80;\n    } else {\n      var offset = rv.length;\n      rv.push(0x0F);\n      if (data.out_of_network) {\n        rv[offset] |= 0x80;\n      }\n      if (data.program_splice) {\n        rv[offset] |= 0x40;\n      }\n      if (data.duration_flag) {\n        rv[offset] |= 0x20;\n      }\n      if (data.splice_immediate) {\n        rv[offset] |= 0x10;\n      }\n      if (data.program_splice && !data.splice_immediate) {\n        rv.push(...SpliceTime.get_binary(data.splice_time));\n      }\n      if (!data.program_splice) {\n        rv.push(data.components.length);\n        for (let i = 0; i < data.components.length; ++i) {\n          console.log(data.components[i]);\n          rv.push(data.components[i].tag);\n          if (!data.splice_immediate) {\n            rv.push(...SpliceTime.get_binary(data.components[i].splice_time));\n          }\n        }\n      }\n      if (data.duration_flag) {\n        rv.push(...BreakDuration.get_binary(data.break_duration));\n      }\n\n      offset = rv.length;\n      rv.push(0x00, 0x00, 0x00, 0x00);\n      rv[offset] |= (data.unique_id & 0xFF00) >>> 8;\n      rv[offset + 1] |= (data.unique_id & 0xFF);\n    }\n    return rv;\n  },\n};\n</script>","import script from \"./splice_insert.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./splice_insert.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <SpliceTime v-model=\"value.splice_time\" />\n</template>\n  \n<script>\nimport SpliceTime from './splice_time.vue'\nexport default {\n  name: \"TimeSignal\",\n  components: {\n    SpliceTime,\n  },\n  props: {\n    modelValue: Object,\n  },\n  computed: {\n    value: {\n      get() {\n        var v = this.modelValue;\n        v.splice_time = {};\n        return v;\n      },\n      set(value) {\n        this.$emit(\"upate:modelValue\", value);\n      },\n    },\n  },\n  get_binary(data) {\n    return SpliceTime.get_binary(data.splice_time);\n  }\n};\n</script>","import { render } from \"./time_signal.vue?vue&type=template&id=cfb44316\"\nimport script from \"./time_signal.vue?vue&type=script&lang=js\"\nexport * from \"./time_signal.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<script setup>\nimport {\n    SEGMENTATION_TYPE_ID,\n    SEGMENTATION_UPID_TYPE,\n    DEVICE_RESTRICTION,\n} from './types.ts';\n\nvar newComponent = {\n    tag: 0,\n    pts_offset: 0,\n};\n</script>\n\n<template>\n    <div class=\"row gy-2\">\n        <div class=\"col-12\">\n            <div class=\"input-group\">\n                <div class=\"input-group-prepend\">\n                    <span class=\"input-group-text\">event_id</span>\n                </div>\n                <input type=\"number\" class=\"form-control\" v-model=\"value.event_id\" />\n            </div>\n\n            <div class=\"form-check form-switch\">\n                <input class=\"form-check-input\" type=\"checkbox\" v-model=\"value.event_cancel\">\n                <label class=\"form-check-label\">event_cancel</label>\n            </div>\n\n            <div v-show=\"!value.event_cancel\">\n\n                <div class=\"form-check form-switch\">\n                    <input class=\"form-check-input\" type=\"checkbox\" v-model=\"value.program_segmentation_flag\">\n                    <label class=\"form-check-label\">program_segmentation_flag</label>\n                </div>\n                <div v-if=\"!value.program_segmentation_flag\" class=\"border rounded display-block\">\n                    <table class=\"table table-bordered\">\n                        <thead>\n                            <th>#</th>\n                            <th>tag</th>\n                            <th>pts offset</th>\n                        </thead>\n                        <tbody>\n                            <tr v-for=\"(comp, index) in value.components\" :key=\"index\">\n                                <td>\n                                    <button type=\"button\" class=\"btn btn-outline-danger btn-sm\"\n                                        @click=\"value.components.splice(index, 1);\">\n                                        X\n                                    </button>\n                                </td>\n                                <td><input type=\"number\" class=\"form-control\" v-model=\"comp.tag\" /></td>\n                                <td><input type=\"number\" class=\"form-control\" v-model=\"comp.pts_offset\" /></td>\n                            </tr>\n                            <tr>\n                                <td>\n                                    <button type=\"button\" class=\"btn btn-outline-primary btn-sm\"\n                                        @click=\"value.components.push(JSON.parse(JSON.stringify(newComponent)));\">\n                                        +\n                                    </button>\n                                </td>\n                                <td></td>\n                                <td></td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n\n                <div class=\"form-check form-switch\">\n                    <input class=\"form-check-input\" type=\"checkbox\" v-model=\"value.duration_flag\">\n                    <label class=\"form-check-label\">duration_flag</label>\n                </div>\n                <div v-show=\"value.duration_flag\">\n                    <div class=\"input-group\">\n                        <div class=\"input-group-prepend\">\n                            <span class=\"input-group-text\">duration</span>\n                        </div>\n                        <input type=\"number\" class=\"form-control\" v-model=\"value.duration\" />\n                    </div>\n                </div>\n\n                <div class=\"form-check form-switch\">\n                    <input class=\"form-check-input\" type=\"checkbox\" v-model=\"value.delivery_not_restricted_flag\">\n                    <label class=\"form-check-label\">delivery_not_restricted_flag</label>\n                </div>\n\n                <div v-show=\"!value.delivery_not_restricted_flag\">\n                    <div class=\"form-check form-switch\">\n                        <input class=\"form-check-input\" type=\"checkbox\" v-model=\"value.web_delivery_allowed_flag\">\n                        <label class=\"form-check-label\">web_delivery_allowed_flag</label>\n                    </div>\n\n\n                    <div class=\"form-check form-switch\">\n                        <input class=\"form-check-input\" type=\"checkbox\" v-model=\"value.no_regional_blackout_flag\">\n                        <label class=\"form-check-label\">no_regional_blackout_flag</label>\n                    </div>\n\n\n                    <div class=\"form-check form-switch\">\n                        <input class=\"form-check-input\" type=\"checkbox\" v-model=\"value.archive_allowed_flag\">\n                        <label class=\"form-check-label\">archive_allowed_flag</label>\n                    </div>\n\n                    <div class=\"row\" style=\"margin-top: 10px;\">\n                        <div class=\"col-6\">\n                            <label class=\"input-group-text\" for=\"restrictions\">device_restrictions</label>\n                        </div>\n                        <div class=\"col-6\">\n                            <select class=\"form-select form-select\" v-model=\"value.device_restrictions\">\n                                <option\n                                    v-for=\"type, index in Object.keys(DEVICE_RESTRICTION).filter(key => isNaN(Number(key)))\"\n                                    :key=\"index\" :value=\"DEVICE_RESTRICTION[type]\">\n                                    {{ type }}\n                                </option>\n                            </select>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"row\" style=\"margin-top: 10px;\">\n                    <div class=\"col-4\">\n                        <label class=\"input-group-text\" for=\"upid_type\">upid_type</label>\n                    </div>\n                    <div class=\"col-8\">\n                        <select class=\"form-select form-select\" v-model=\"value.upid_type\">\n                            <option\n                                v-for=\"type, index in Object.keys(SEGMENTATION_UPID_TYPE).filter(key => isNaN(Number(key)))\"\n                                :key=\"index\" :value=\"SEGMENTATION_UPID_TYPE[type]\">\n                                {{ type.toLowerCase() }}</option>\n                        </select>\n                    </div>\n                    <div v-if=\"value.upid_type != SEGMENTATION_UPID_TYPE.NOT_USED\" class=\"col-12\">\n                        <div class=\"input-group\">\n                            <div class=\"input-group-prepend\">\n                                <span class=\"input-group-text\">upid</span>\n                            </div>\n                            <input type=\"text\" class=\"form-control\" v-model=\"value.upid\" />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-5\">\n            <label class=\"input-group-text\" for=\"descritor_type\">segment_type</label>\n        </div>\n        <div class=\"col-7\">\n            <select class=\"form-select form-select\" v-model=\"value.type_id\">\n                <option v-for=\"type_id, index in Object.keys(SEGMENTATION_TYPE_ID).filter(key => isNaN(Number(key)))\"\n                    :key=\"index\" :value=\"SEGMENTATION_TYPE_ID[type_id]\">\n                    {{ type_id.toLowerCase() }}</option>\n            </select>\n        </div>\n\n        <div v-if=\"SEGMENTATION_TYPE_ID.get_segment_num(value.type_id) != SEGMENTATION_TYPE_ID.SEGMENT_NUM.ZERO\n            && SEGMENTATION_TYPE_ID.get_segment_num(value.type_id) != SEGMENTATION_TYPE_ID.SEGMENT_NUM.ONE\"\n            class=\"col-12\">\n            <div class=\"input-group\">\n                <div class=\"input-group-prepend\">\n                    <span class=\"input-group-text\">segment_num</span>\n                </div>\n                <input type=\"number\" class=\"form-control\" v-model=\"value.segment_num\" />\n            </div>\n            <div class=\"input-group\">\n                <div class=\"input-group-prepend\">\n                    <span class=\"input-group-text\">segments_expcted</span>\n                </div>\n                <input type=\"number\" class=\"form-control\" v-model=\"value.segments_expcted\" />\n            </div>\n        </div>\n\n        <div v-if=\"SEGMENTATION_TYPE_ID.sub_segment_required(value.type_id)\" class=\"col-12\">\n            <div class=\"input-group\">\n                <div class=\"input-group-prepend\">\n                    <span class=\"form-control\">sub_segment_num</span>\n                </div>\n                <input type=\"number\" class=\"form-control\" v-model=\"value.sub_segment_num\" />\n            </div>\n            <div class=\"input-group\">\n                <div class=\"input-group-prepend\">\n                    <span class=\"form-control\">sub_segments_expcted</span>\n                </div>\n                <input type=\"number\" class=\"form-control\" v-model=\"value.sub_segments_expcted\" />\n            </div>\n        </div>\n\n    </div>\n</template>\n    \n<script>\nexport default {\n    name: \"SegmentationDescriptor\",\n    props: {\n        modelValue: Object,\n    },\n    computed: {\n        value: {\n            get() {\n                var v = this.modelValue;\n                if (!v.init) {\n                    v.init = true;\n                    v.event_id = 1;\n                    v.event_cancel = false;\n                    v.program_segmentation_flag = true;\n                    v.duration_flag = false;\n                    v.delivery_not_restricted_flag = false;\n                    v.web_delivery_allowed_flag = false;\n                    v.no_regional_blackout_flag = false;\n                    v.archive_allowed_flag = false;\n                    v.device_restrictions = DEVICE_RESTRICTION.NONE;\n                    v.components = [];\n                    v.duration = 0;\n                    v.upid_type = SEGMENTATION_UPID_TYPE.NOT_USED;\n                    v.upid = \"\";\n                    v.type_id = 0;\n                    v.segment_num = 0;\n                    v.segments_expcted = 0;\n                    v.sub_segment_num = 0;\n                    v.sub_segments_expcted = 0;\n                }\n                return v;\n            },\n            set(value) {\n                this.$emit(\"upate:modelValue\", value);\n            },\n        },\n    },\n    get_binary(data) {\n        var rv = [0x02, 0x00, 0x43, 0x55, 0x45, 0x49];\n\n        var offset = rv.length;\n        rv.push(0x00, 0x00, 0x00, 0x00);\n        rv[offset] |= (data.event_id & 0xFF000000) >>> 24;\n        rv[offset + 1] |= (data.event_id & 0xFF0000) >>> 16;\n        rv[offset + 2] |= (data.event_id & 0xFF00) >>> 8;\n        rv[offset + 3] |= (data.event_id & 0xFF);\n\n        offset = rv.length;\n        rv.push(0x7F);\n        if (data.event_cancel) {\n            rv[offset] |= 0x80;\n        } else {\n            offset = rv.length;\n            rv.push(0x00);\n            if (data.program_segmentation_flag) {\n                rv[offset] |= 0x80;\n            }\n            if (data.duration_flag) {\n                rv[offset] |= 0x40\n            }\n            if (data.delivery_not_restricted_flag) {\n                rv[offset] |= 0x3F;\n            } else {\n                if (data.web_delivery_allowed_flag) {\n                    rv[offset] |= 0x10;\n                }\n                if (data.no_regional_blackout_flag) {\n                    rv[offset] |= 0x08;\n                }\n                if (data.archive_allowed_flag) {\n                    rv[offset] |= 0x04;\n                }\n                rv[offset] |= (data.device_restrictions & 0x03);\n            }\n\n            // program_segmentation_flag hardcode to true now\n            if (!data.program_segmentation_flag) {\n                rv.push(data.components.length);\n                for (let i = 0; i < data.components.length; ++i) {\n                    rv.push(data.components[i].tag);\n                    offset = rv.length;\n                    rv.push(0xFE, 0x00, 0x00, 0x00, 0x00);\n                    rv[offset] |= (data.components[i].pts_offset & 0x0100000000) >>> 32;\n                    rv[offset + 1] |= (data.components[i].pts_offset & 0xFF000000) >>> 24;\n                    rv[offset + 2] |= (data.components[i].pts_offset & 0xFF0000) >>> 16;\n                    rv[offset + 3] |= (data.components[i].pts_offsetue & 0xFF00) >>> 8;\n                    rv[offset + 4] |= (data.components[i].pts_offset & 0xFF);\n                }\n            }\n\n            if (data.duration_flag) {\n                offset = rv.length;\n                rv.push(0x00, 0x00, 0x00, 0x00, 0x00);\n                rv[offset] |= (data.duration & 0xFF00000000) >>> 32;\n                rv[offset + 1] |= (data.duration & 0xFF000000) >>> 24;\n                rv[offset + 2] |= (data.duration & 0xFF0000) >>> 16;\n                rv[offset + 3] |= (data.duration & 0xFF00) >>> 8;\n                rv[offset + 4] |= (data.duration & 0xFF);\n            }\n\n            let upid_length = SEGMENTATION_UPID_TYPE.lenth_limit(data.upid_type)\n            let upid_data = data.upid;\n            if (upid_length != undefined && upid_length >= 0) {\n                if (upid_data.length < upid_length) {\n                    upid_data = data.upid.padStart(upid_length, 0x00);\n                } else {\n                    upid_data = upid_data.slice(0, upid_length);\n                }\n            } else {\n                upid_length = data.upid.length;\n            }\n            rv.push(data.upid_type);\n            rv.push(upid_length);\n            for (let i = 0; i < upid_length; ++i) {\n                rv.push(upid_data.charCodeAt(i));\n            }\n            // rv.push(...upid_data);\n\n            rv.push(data.type_id & 0xFF);\n\n            // segment num\n            switch (SEGMENTATION_TYPE_ID.get_segment_num(data.type_id)) {\n                case SEGMENTATION_TYPE_ID.SEGMENT_NUM.ZERO:\n                    rv.push(0x00, 0x00);\n                    break;\n                case SEGMENTATION_TYPE_ID.SEGMENT_NUM.ONE:\n                    rv.push(0x01, 0x01);\n                    break;\n                case SEGMENTATION_TYPE_ID.SEGMENT_NUM.POSITIVE:\n                case SEGMENTATION_TYPE_ID.SEGMENT_NUM.NON_NEGATIVE:\n                    rv.push(data.segment_num & 0xFF);\n                    rv.push(data.segments_expcted & 0xFF);\n                    break;\n            }\n\n            if (SEGMENTATION_TYPE_ID.sub_segment_required(data.type_id)) {\n                rv.push(data.sub_segment_num & 0xFF);\n                rv.push(data.sub_segments_expcted & 0xFF);\n            }\n\n            rv[1] |= (rv.length - 2) & 0xFF;\n        }\n        return rv\n    }\n};\n</script>","import script from \"./seg_descriptor.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./seg_descriptor.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import axios from 'axios'\n\nexport default {\n\tpost(request: any) {\n\t\treturn axios.post('/esam', request);\n\t},\n}","<script setup>\nimport { reactive } from 'vue';\nimport esamService from '@/services/Esam.ts'\n\nconst TIME_MODE = {\n    ABSOLUTE: 0,\n    RELATIVE: 1,\n};\n\nconst TIME_MODE_TO_STR = {\n    0: \"utc\",\n    1: \"from_now\",\n};\n\nvar esam_request_response = reactive({\n    has_data: false,\n    data: {},\n    has_esam_command: false,\n    esam_command: \"\",\n});\n\nvar oob_request = reactive({\n    ip: \"198.18.12.151\",\n    port: 8088,\n    acq_id: \"VOSTEST1\",\n    time_mode: TIME_MODE.RELATIVE,\n    from_now: 10,\n    utc_date: new Date(),\n});\n\nvar waitForResponse = false;\nasync function sendOobRequest(base64str) {\n    esam_request_response.has_data = false;\n    esam_request_response.has_esam_command = false;\n\n    var utc_time = new Date();\n    switch (oob_request.time_mode) {\n        case TIME_MODE.ABSOLUTE:\n            utc_time = oob_request.utc_date;\n            break;\n        case TIME_MODE.RELATIVE:\n            utc_time.setSeconds(utc_time.getSeconds() + oob_request.from_now);\n            break;\n    }\n    const utc_time_str = utc_time.toISOString();\n    const binary_str = base64str;\n    const acq_id = oob_request.acq_id;\n    const url = \"http://\" + oob_request.ip + \":\" + oob_request.port.toString() + \"/\";\n\n    try {\n        waitForResponse = true;\n        var response = await esamService.post({\n            url: url,\n            method: \"POST\",\n            utc_time: utc_time_str,\n            scte35_binary: binary_str,\n            acq_id: acq_id,\n        });\n        console.log(response);\n\n        esam_request_response.has_data = true;\n        esam_request_response.data = response.data.server_response;\n\n        esam_request_response.has_esam_command = true;\n        esam_request_response.esam_command = response.data.esam_command;\n    } catch (e) {\n        console.log(e);\n    } finally {\n        waitForResponse = false;\n    }\n}\n\n</script>\n\n<template>\n    <div class=\"row\">\n        <div class=\"col\">\n            <h6 style=\"text-align: center;\">ESAM OOB Sender</h6>\n        </div>\n    </div>\n\n    <div class=\"row\">\n        <div class=\"col-12 col-lg-6\">\n            <div class=\"input-group\">\n                <div class=\"input-group-prepend\">\n                    <span class=\"input-group-text\">IP</span>\n                </div>\n                <input type=\"text\" class=\"form-control\" v-model=\"oob_request.ip\" />\n            </div>\n\n            <div class=\"input-group\">\n                <div class=\"input-group-prepend\">\n                    <span class=\"input-group-text\">port</span>\n                </div>\n                <input type=\"text\" class=\"form-control\" v-model=\"oob_request.port\" />\n            </div>\n\n            <div class=\"input-group\">\n                <div class=\"input-group-prepend\">\n                    <span class=\"input-group-text\">acq_id</span>\n                </div>\n                <input type=\"text\" class=\"form-control\" v-model=\"oob_request.acq_id\" />\n            </div>\n\n            <div class=\"input-group\">\n                <div class=\"col-5\">\n                    <label class=\"input-group-text\" for=\"descritor_type\">time mode</label>\n                </div>\n                <div class=\"col-7\">\n                    <select class=\"form-select form-select\" v-model=\"oob_request.time_mode\">\n                        <option v-for=\"val, index in TIME_MODE\" :key=\"index\" :value=\"val\">\n                            {{ TIME_MODE_TO_STR[val] }}</option>\n                    </select>\n                </div>\n            </div>\n\n            <div class=\"input-group\">\n                <div v-if=\"oob_request.time_mode == TIME_MODE.ABSOLUTE\">\n                    <VueDatePicker v-model=\"oob_request.utc_date\" timezone=\"UTC\" enable-seconds text-input vertical />\n                </div>\n                <div class=\"input-group\" v-else-if=\"oob_request.time_mode == TIME_MODE.RELATIVE\">\n                    <div class=\"input-group-prepend\">\n                        <span class=\"input-group-text\">sec_from_now</span>\n                    </div>\n                    <input type=\"number\" class=\"form-control\" v-model=\"oob_request.from_now\" />\n                </div>\n            </div>\n        </div>\n\n        <div class=\"col-12 col-lg-6\">\n            <div class=\"input-group\">\n                <button type=\"button\" class=\"btn btn-outline-primary\" @click=\"sendOobRequest(modelValue.binary_base64)\" :disabled=\"waitForResponse\">\n                    Send ESAM Request\n                </button>\n            </div>\n\n            <div class=\"border rounded\" style=\"margin-top: 10px; min-height: 150px;\">\n                <pre v-if=\"esam_request_response.has_data\">{{ esam_request_response.data }}</pre>\n            </div>\n        </div>\n    </div>\n\n    <div v-if=\"esam_request_response.has_esam_command\">\n        <div class=\"row input-group\">\n            <div class=\"col\" style=\"text-align: center;\">\n                <span>ESAM Command</span>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col\">\n                <prism-editor class=\"my-editor prism-editor-wrapper border rounded\"\n                    v-model=\"esam_request_response.esam_command\" :highlight=\"highlighter\" language=\"xml\" lineNumbers\n                    readonly></prism-editor>\n            </div>\n        </div>\n    </div>\n</template>\n    \n<script>\n\n// import Prism Editor\nimport { PrismEditor } from 'vue-prism-editor';\nimport { highlight, languages } from 'prismjs/components/prism-core';\nimport 'prismjs/components/prism-clike';\nimport 'prismjs/components/prism-markup';\nimport 'prismjs/themes/prism-tomorrow.css';\nimport 'vue-prism-editor/dist/prismeditor.min.css';\nimport VueDatePicker from '@vuepic/vue-datepicker';\nimport '@vuepic/vue-datepicker/dist/main.css';\n\nexport default {\n    name: \"EsamOobPlayer\",\n    components: {\n        PrismEditor,\n        VueDatePicker,\n    },\n    props: {\n        modelValue: Object,\n    },\n    methods: {\n        highlighter(code) {\n            return highlight(code, languages.xml, \"xml\");\n        }\n    }\n};\n</script>\n\n<style>\n.my-editor {\n    background-color: #fafafa;\n    max-height: 350px;\n    font-family: Fira code, Fira Mono, Consolas, Menlo, Courier, monospace;\n    font-size: 14px;\n    line-height: 1.5;\n    padding: 5px 10px;\n}\n\n.prism-editor-wrapper {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: flex-start;\n    overflow: auto;\n    -o-tab-size: 1.5em;\n    tab-size: 1.5em;\n    -moz-tab-size: 1.5em;\n}\n\n.input-group {\n    margin-top: 5px;\n}\n</style>","import script from \"./esam_oob_player.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./esam_oob_player.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./esam_oob_player.vue?vue&type=style&index=0&id=1ef93098&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { reactive, ref } from \"vue\";\nimport crc32mpeg2 from 'crc/calculators/crc32mpeg2';\nimport {\n    COMMAND_TYPE,\n    DESCRIPTOR_TYPE,\n    SEGMENTATION_TYPE_ID,\n} from './types.ts';\n\nvar enable_debug = ref(false);\nvar splice_info = reactive({\n    splice_command: {\n        type: COMMAND_TYPE.SPLICE_INSERT,\n        data: {},\n    },\n    new_descriptor: {\n        tag: DESCRIPTOR_TYPE.SEGMENTATION_DESCIPTOR,\n        data: {\n            init: false,\n        }\n    },\n    descriptors: [],\n});\n\nvar display_descriptor = reactive({\n    is_create: false,\n    show_descriptor: false,\n    descriptor: {},\n});\nfunction sendDesc(d, is_create = false) {\n    display_descriptor.is_create = is_create;\n    display_descriptor.show_descriptor = true;\n    display_descriptor.descriptor = d;\n}\n\nfunction to_hex_str(bytes) {\n    return Array.from(bytes, (byte) => {\n        return ('0' + (byte & 0xff).toString(16)).slice(-2);\n    }).join('');\n}\n\nconst generatedData = reactive({\n    binary_str: \"\",\n    binary_base64: \"\",\n});\n\n\nfunction get_binary(data) {\n    var binary = [0xFC, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xF0, 0x00];\n    var offset = 0;\n\n    // command part\n    binary.push(data.splice_command.type);\n    var splice_command_length = 0;\n    var result = [];\n    switch (data.splice_command.type) {\n        case COMMAND_TYPE.SPLICE_INSERT:\n            result = SpliceInsert.get_binary(data.splice_command.data);\n            splice_command_length = result.length;\n            binary.push(...result);\n            break;\n        case COMMAND_TYPE.TIME_SIGNAL:\n            result = TimeSignal.get_binary(data.splice_command.data);\n            splice_command_length = result.length;\n            binary.push(...result);\n            break;\n        default:\n            break;\n    }\n    binary[11] |= (splice_command_length & 0xF00) >> 8;\n    binary[12] |= (splice_command_length & 0xFF);\n\n    // descriptor part\n    offset = binary.length;\n    binary.push(0x00, 0x00);\n    var desc_length = 0;\n    for (var i = 0; i < data.descriptors.length; ++i) {\n        var d = data.descriptors[i];\n        switch (d.tag) {\n            case DESCRIPTOR_TYPE.SEGMENTATION_DESCIPTOR:\n                result = SegmentationDescriptor.get_binary(d.data);\n                desc_length += result.length;\n                binary.push(...result);\n                break;\n            default:\n                break;\n        }\n    }\n    binary[offset] |= (desc_length & 0xFF00) >>> 8;\n    binary[offset + 1] |= (desc_length & 0xFF);\n\n    // section length\n    var section_length = binary.length + 1;\n    binary[1] |= (section_length & 0x0F00) >>> 8;\n    binary[2] |= (section_length & 0xFF);\n\n    // tail\n    offset = binary.length;\n    var crc_val = crc32mpeg2(binary) >>> 0;\n    splice_info.crc = crc_val;\n    binary.push(0x00, 0x00, 0x00, 0x00);\n    binary[offset] |= (crc_val & 0xFF000000) >>> 24;\n    binary[offset + 1] |= (crc_val & 0xFF0000) >>> 16;\n    binary[offset + 2] |= (crc_val & 0xFF00) >>> 8;\n    binary[offset + 3] |= (crc_val & 0xFF);\n\n    generatedData.binary_str = to_hex_str(binary);\n    generatedData.binary_base64 = btoa(String.fromCharCode.apply(binary, binary)).replace(/.{76}(?=.)/g, '$&\\n');\n}\n\nfunction copy_to_clipboard(text) {\n    if (!navigator.clipboard) {\n        var copyhelper = document.createElement(\"input\");\n        copyhelper.className = 'copyhelper'\n        document.body.appendChild(copyhelper);\n        copyhelper.value = text;\n        copyhelper.select();\n        document.execCommand(\"copy\");\n        document.body.removeChild(copyhelper);\n    } else {\n        navigator.clipboard.writeText(text);\n    }\n}\n</script>\n\n<template>\n    <div class=\"container\">\n        <br>\n        <h5 style=\"text-align: center;\">Scte35 Generator</h5>\n        <div class=\"row\">\n            <!-- Command -->\n            <div class=\"col-12 col-lg-6\">\n                <!-- select command type -->\n                <div class=\"border rounded display-block\">\n                    <div class=\"row\">\n                        <div class=\"col-4\">\n                            <label class=\"input-group-text\" for=\"command type\">Command Type</label>\n                        </div>\n                        <div class=\"col-8\">\n                            <select class=\"form-select form-select\" v-model=\"splice_info.splice_command.type\">\n                                <option v-for=\"type, index in Object.keys(COMMAND_TYPE).filter(key => isNaN(Number(key)))\"\n                                    :key=\"index\" :value=\"COMMAND_TYPE[type]\">\n                                    {{ type.toLowerCase() }}\n                                </option>\n                            </select>\n                        </div>\n                    </div>\n                    <!-- command content -->\n                    <div v-if=\"splice_info.splice_command.type == COMMAND_TYPE.SPLICE_INSERT\">\n                        <hr />\n                        <SpliceInsert v-model=\"splice_info.splice_command.data\" />\n                    </div>\n                    <div v-else-if=\"splice_info.splice_command.type == COMMAND_TYPE.TIME_SIGNAL\">\n                        <hr />\n                        <TimeSignal v-model=\"splice_info.splice_command.data\" />\n                    </div>\n                </div>\n            </div>\n\n            <!-- Descriptor -->\n            <div class=\"col-12 col-lg-6\">\n                <!-- select descriptor type -->\n                <div class=\"border rounded display-block\">\n                    <div class=\"row\">\n                        <div class=\"col-4\">\n                            <label class=\"input-group-text\" for=\"descritor_type\">Descriptor Tag</label>\n                        </div>\n                        <div class=\"col-6\">\n                            <select class=\"form-select form-select\" v-model=\"splice_info.new_descriptor.tag\">\n                                <option\n                                    v-for=\"type, index in Object.keys(DESCRIPTOR_TYPE).filter(key => isNaN(Number(key)))\"\n                                    :key=\"index\" :value=\"DESCRIPTOR_TYPE[type]\">\n                                    {{ type.toLowerCase() }}</option>\n                            </select>\n                        </div>\n\n                        <div class=\"col-2\">\n                            <div>\n                                <button type=\"button\" class=\"btn btn-outline-primary\" data-bs-toggle=\"modal\"\n                                    data-bs-target=\"#descriptorView\"\n                                    @click=\"splice_info.new_descriptor.data.init = false; sendDesc(splice_info.new_descriptor, true)\">Add</button>\n                            </div>\n                        </div>\n                    </div>\n\n                    <!-- decriptor display -->\n                    <hr />\n                    <div class=\"table-responsive scrollable\">\n                        <table class=\"table\">\n                            <thead>\n                                <tr>\n                                    <th style=\"position: sticky; top:0;\">Descriptor</th>\n                                    <th style=\"position: sticky; top:0;\">Delete</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr v-for=\"(d, i) in splice_info.descriptors\" :key=\"i\">\n                                    <td>\n                                        <button type=\"button\" class=\"btn btn-primary btn-sm\" data-bs-toggle=\"modal\"\n                                            data-bs-target=\"#descriptorView\" @click=\"sendDesc(splice_info.descriptors[i])\"\n                                            style=\"text-align: left;\">\n                                            {{ DESCRIPTOR_TYPE[d.tag] }}\n                                            <br />\n                                            <div style=\"margin-left: 10px; text-align: left;\">\n                                                <div v-if=\"d.tag == DESCRIPTOR_TYPE.SEGMENTATION_DESCIPTOR\">\n                                                    type_id: {{ SEGMENTATION_TYPE_ID[d.data.type_id] }}\n                                                    <br />\n                                                    duraion: {{ d.data.duration }}\n                                                </div>\n                                            </div>\n                                        </button>\n\n                                    </td>\n                                    <td>\n                                        <button type=\"button\" class=\"btn btn-outline-danger btn-sm\"\n                                            @click=\"splice_info.descriptors.splice(i, 1)\">Delete</button>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n\n            <!-- SCTE35 output -->\n            <div class=\"col-12\">\n                <div class=\"border rounded display-block\">\n                    <div class=\"row gy-2\">\n                        <div class=\"col-12\">\n                            <div>\n                                <button type=\"button\" class=\"btn btn-outline-primary btn-lg\"\n                                    @click=\"get_binary(splice_info)\">Generate\n                                    SCTE35</button>\n                            </div>\n                        </div>\n\n                        <div class=\"col-4 col-md-4 col-xl-2\">\n                            <div class=\"input-group\">\n                                <div class=\"input-group-prepend\">\n                                    <span class=\"input-group-text\">SCTE35 Binary</span>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-5 col-md-6 col-xl-9\">\n                            <textarea class=\"form-control\" aria-label=\"With textarea\" rows=\"2\"\n                                v-model=\"generatedData.binary_str\" disabled></textarea>\n                        </div>\n                        <div class=\"col-3 col-md-2 col-xl-1\">\n                            <button type=\"button\" class=\"btn btn-outline-primary\"\n                                @click=\"copy_to_clipboard(generatedData.binary_str)\">Copy</button>\n                        </div>\n\n                        <div class=\"col-4 col-md-4 col-xl-2\">\n                            <div class=\"input-group\">\n                                <div class=\"input-group-prepend\">\n                                    <span class=\"input-group-text\">SCTE35 Base64</span>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-5 col-md-6 col-xl-9\">\n                            <textarea class=\"form-control\" aria-label=\"With textarea\" rows=\"\"\n                                v-model=\"generatedData.binary_base64\" disabled></textarea>\n                        </div>\n                        <div class=\"col-3 col-md-2 col-xl-1\">\n                            <button type=\"button\" class=\"btn btn-outline-primary\"\n                                @click=\"copy_to_clipboard(generatedData.binary_base64)\">Copy</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <!-- ESAM OOB -->\n            <div v-if=\"false\" class=\"col-12\">\n                <div class=\"border rounded display-block\">\n                    <EsamOobPlayer v-model=\"generatedData\" />\n                </div>\n            </div>\n\n            <!-- debug panel -->\n            <div v-if=\"false\" class=\"col-12\">\n                <div class=\"border rounded display-block\">\n                    <div class=\"col-2\">\n                        <div class=\"form-check form-switch\">\n                            <input class=\"form-check-input\" type=\"checkbox\" v-model=\"enable_debug\">\n                            <label class=\"form-check-label\">debug</label>\n                        </div>\n                    </div>\n                    <div class=\"col-8\">\n                        <div v-show=\"enable_debug\">\n                            <pre>{{ splice_info }}</pre>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <!-- Footer -->\n        <footer class=\"d-flex flex-wrap justify-content-between align-items-center py-1 my-5 border-top\">\n            <div class=\"col-md-4 d-flex align-items-center\">\n                <span>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-github\"\n                        viewBox=\"0 0 16 16\">\n                        <path\n                            d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.012 8.012 0 0 0 16 8c0-4.42-3.58-8-8-8z\" />\n                    </svg>\n                </span>\n                <span class=\"mx-1\">\n                    <a href=\"https://github.com/hlitpxu/scte35_generator\"\n                        class=\"link-secondary link-offset-2 link-underline-opacity-25 link-underline-opacity-100-hover\">hlitpxu/scte35_generator</a>\n                </span>\n            </div>\n        </footer>\n\n        <!-- Decriptor modal -->\n        <div class=\"modal fade\" id=\"descriptorView\" tabindex=\"-1\">\n            <div class=\"modal-dialog\">\n                <div class=\"modal-content\">\n                    <div class=\"modal-header\">\n                        <h5 class=\"modal-title\">Descriptor</h5>\n                        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\"></button>\n                    </div>\n                    <div class=\"modal-body\">\n                        <SegmentationDescriptor v-if=\"display_descriptor.show_descriptor\"\n                            v-model=\"display_descriptor.descriptor.data\" />\n                    </div>\n                    <div class=\"modal-footer\">\n                        <button v-if=\"display_descriptor.is_create\" type=\"button\" class=\"btn btn-primary\"\n                            data-bs-dismiss=\"modal\"\n                            @click=\"splice_info.descriptors.push(JSON.parse(JSON.stringify(display_descriptor.descriptor)))\">Create</button>\n                        <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport SpliceInsert from \"./splice_insert.vue\"\nimport TimeSignal from \"./time_signal.vue\"\nimport SegmentationDescriptor from \"./seg_descriptor.vue\"\nimport EsamOobPlayer from './esam_oob_player.vue';\nexport default {\n    name: \"SpliceInfo\",\n    components: {\n        SpliceInsert,\n        TimeSignal,\n        SegmentationDescriptor,\n        EsamOobPlayer,\n    },\n};\n</script>\n","import script from \"./splice_info.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./splice_info.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=a7240d7c\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createApp } from 'vue'\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport \"bootstrap\"\nimport \"./asset/main.css\"\nimport App from './App.vue'\n\ncreateApp(App).mount('#app')\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkclient\"] = self[\"webpackChunkclient\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(2256); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_createBlock","_component_SpliceInfo","COMMAND_TYPE","DESCRIPTOR_TYPE","SEGMENTATION_TYPE_ID","SEGMENTATION_UPID_TYPE","DEVICE_RESTRICTION","sub_segment_type_ids","PROVIDER_PLACEMENT_OPPORTUNITY_START","DISTRIBUTOR_PLACEMENT_OPPORTUNITY_START","PROVIDER_OVERLAY_PLACEMENT_OPPORTUNITY_START","DISTRIBUTOR_OVERLAY_PLACEMENT_OPPORTUNITY_START","sub_segment_required","type_id","indexOf","SEGMENT_NUM","zero_num_type_ids","NOT_INDICATED","CONTENT_IDENTIFICATION","PROGRAM_BLACKOUT_OVERRIDE","UNSCHEDULED_EVENT_START","UNSCHEDULED_EVENT_END","NETWORK_START","NETWORK_END","one_num_type_ids","PROGRAM_START","PROGRAM_END","PROGRAM_EARLY_TERMINATION","PROGRAM_BREAKAWAY","PROGRAM_RESUMPTION","PROGRAM_RUNOVER_PLANNED","PROGRAM_RUNOVER_UNPLANNED","PROGRAM_OVERLAP_START","PROGRAM_START_IN_PROGRESS","OPENING_CREDIT_START","OPENING_CREDIT_END","CLOSING_CREDIT_START","CLOSING_CREDIT_END","positive_num_type_ids","CHAPTER_START","CHAPTER_END","get_segment_num","includes","ZERO","ONE","POSITIVE","NON_NEGATIVE","lenth_limit_map","Map","NOT_USED","USER_DEFINED","ISCI","AD_ID","UMID","ISAN_5","ISAN_6","TID","TI","ADI","EIDR","ATSC_CONTENT_IDENTIFIER","MPU","MID","ADS_INFORMATION","URI","lenth_limit","type","get","class","_createElementVNode","_hoisted_1","$options","value","time_specified","$event","_hoisted_2","_createElementBlock","_hoisted_3","_hoisted_4","pts_time","name","props","modelValue","Object","computed","v","this","set","$emit","get_binary","data","rv","push","__exports__","auto_return","duration","__default__","components","SpliceTime","BreakDuration","event_id","splice_cancel","program_id","out_of_network","duration_flag","splice_immediate","program_splice","splice_time","break_duration","unique_id","offset","length","i","console","log","tag","newComponent","_component_SpliceTime","init","event_cancel","program_segmentation_flag","delivery_not_restricted_flag","web_delivery_allowed_flag","no_regional_blackout_flag","archive_allowed_flag","device_restrictions","NONE","upid_type","upid","segment_num","segments_expcted","sub_segment_num","sub_segments_expcted","pts_offset","pts_offsetue","upid_length","upid_data","undefined","padStart","slice","charCodeAt","post","request","axios","PrismEditor","VueDatePicker","methods","highlighter","code","highlight","languages","xml","TIME_MODE","ABSOLUTE","RELATIVE","TIME_MODE_TO_STR","esam_request_response","reactive","has_data","has_esam_command","esam_command","oob_request","ip","port","acq_id","time_mode","from_now","utc_date","Date","waitForResponse","async","sendOobRequest","base64str","utc_time","setSeconds","getSeconds","utc_time_str","toISOString","binary_str","url","toString","response","esamService","method","scte35_binary","server_response","e","SpliceInsert","TimeSignal","SegmentationDescriptor","EsamOobPlayer","ref","splice_info","splice_command","SPLICE_INSERT","new_descriptor","SEGMENTATION_DESCIPTOR","descriptors","display_descriptor","is_create","show_descriptor","descriptor","sendDesc","d","to_hex_str","bytes","Array","from","byte","join","generatedData","binary_base64","binary","splice_command_length","result","TIME_SIGNAL","desc_length","section_length","crc_val","crc32mpeg2","crc","btoa","String","fromCharCode","apply","replace","copy_to_clipboard","text","navigator","clipboard","writeText","copyhelper","document","createElement","className","body","appendChild","select","execCommand","removeChild","SpliceInfo","render","createApp","App","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","keys","every","key","splice","r","definition","o","defineProperty","enumerable","g","globalThis","Function","window","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","id","chunkLoadingGlobal","self","forEach","bind","__webpack_exports__"],"sourceRoot":""}